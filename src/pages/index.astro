---
import type { MarkdownInstance } from "astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import { formatDate } from "../scripts/date";

type Frontmatter = {
  title: string;
	subTitle?: string;
	pubDate: Date;
};

const posts = Object.values(
  import.meta.glob<MarkdownInstance<Frontmatter>>(
    './blog/*/*.{md,mdx}',
    { eager: true }
  )
);

const byPubDate = (
	a: MarkdownInstance<Frontmatter>,
	b: MarkdownInstance<Frontmatter>
) => (
	a.frontmatter.pubDate > b.frontmatter.pubDate ? -1 : 1
);
---

<BaseLayout>
  <h1>Tobias LÃ¸fgren</h1>

	<p>
		Hi there, thanks for stopping by! By day I work as a Software Engineer for <a href="https://www.lego.com/">The LEGO Group</a> in Denmark and by night I work on fun side projects, some of which I write about here.
	</p>
	<p>
		Feel free to check out my stuff on <a href="https://github.com/tobloef">GitHub</a> or <a href="https://bsky.app/profile/tobloef.bsky.social">Bluesky<a/>, or reach out directly to <a href="mailto:tobloef@gmail.com">tobloef@gmail.com</a>.
	</p>

	<h2>Blog Posts</h2>
	<ul>
    {
			posts
			.toSorted(byPubDate)
			.map((post) => (
				<li>
					<a href={post.url}>{post.frontmatter.title}</a>
					<span class="de-emphasize">
						({formatDate({
							date: post.frontmatter.pubDate
						})})
					</span>
				</li>
    	))
		}
	</ul>
</BaseLayout>
